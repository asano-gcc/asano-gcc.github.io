"use strict";(self.webpackChunkasano_build=self.webpackChunkasano_build||[]).push([[158],{6158:(g,i,o)=>{o.r(i),o.d(i,{OverviewPageModule:()=>l});var r=o(9808),e=o(2096);let s=(()=>{class n{constructor(){}ngOnInit(){}}return n.\u0275fac=function(t){return new(t||n)},n.\u0275cmp=e.Xpm({type:n,selectors:[["app-overview-page"]],decls:12,vars:0,consts:[[1,"my-2","d-flex","justify-content-center"],[1,"h3","text-center"],[1,"py-2","d-flex","justify-content-center"],["src","/assets/overview.png","sizes","",1,"img-thumbnail","w-75"]],template:function(t,d){1&t&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e._uU(2," Introducing asano-gcc "),e.qZA(),e.qZA(),e.TgZ(3,"div"),e._uU(4," asano-gcc is based on GCC (GNU Compiler Collection) and MinGW-w64. Aiming for portable and high-performance code generation, asano-gcc only focuses on C/C++ compiler, no Fortran or other languages. asano-gcc is a pure 64bit toolset of compiler, linker and debugger for modern Windows (7+). All components run on Windows natively (No need MSYS installed). "),e.TgZ(5,"div",2),e._UZ(6,"img",3),e.qZA(),e.qZA(),e.TgZ(7,"div",0),e.TgZ(8,"div",1),e._uU(9," Ready for your next C++ project "),e.qZA(),e.qZA(),e.TgZ(10,"div"),e._uU(11," asano-gcc targets on generating light and fast binaries. Generated binaries are smaller than other MinGW-w64 GCC compilers. Without extra DLLs dependency, deployment is as simple as file copy. Most popular C++ projects (Qt, CMake, Git, JavaScript V8, FFmpeg...) which can be built using MinGW-w64 should be built smoothly using asano-gcc.\n"),e.qZA())},styles:[".w-75[_ngcontent-%COMP%]{max-width:400px}"]}),n})();var c=o(1932);let l=(()=>{class n{}return n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[r.ez,c.Bz.forChild([{path:"",component:s}])]]}),n})()}}]);