(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"0YKp":function(e,t,a){"use strict";a.r(t),a.d(t,"FeaturesPageModule",function(){return b});var o=a("ofXK"),r=a("fXoL");let n=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=r.yb({type:e,selectors:[["app-features-page"]],decls:33,vars:0,consts:[[1,"row"],[1,"col","col-12","col-md-6"],[1,"card","border-0"],[1,"card-body"],[1,"card-title"]],template:function(e,t){1&e&&(r.Hb(0,"div",0),r.Hb(1,"div",1),r.Hb(2,"div",2),r.Hb(3,"div",3),r.Hb(4,"h3",4),r.ac(5," Small generation "),r.Gb(),r.ac(6," asano-gcc usually generates smaller binaries then other GCC/MinGW-w64 compilers. It also static links to standard C/C++ libraries, no worries about extra DLLs deployment. "),r.Gb(),r.Gb(),r.Hb(7,"div",2),r.Hb(8,"div",3),r.Hb(9,"h3",4),r.ac(10," GDB with latest python embedded "),r.Gb(),r.ac(11," Latest python is embedded to GDB for some IDEs showing better STL/Qt types debug information. "),r.Gb(),r.Gb(),r.Hb(12,"div",2),r.Hb(13,"div",3),r.Hb(14,"h3",4),r.ac(15," Pure 64-bit code "),r.Gb(),r.ac(16," From compiler to linker, from debugger to target code, asano-gcc toolset and target are all Windows native 64bit binaries. "),r.Gb(),r.Gb(),r.Gb(),r.Hb(17,"div",1),r.Hb(18,"div",2),r.Hb(19,"div",3),r.Hb(20,"h3",4),r.ac(21," New CPU instructions "),r.Gb(),r.ac(22," Targeting for using recent instruction(Core2) set as well as guarantee working on decade years old CPU. "),r.Gb(),r.Gb(),r.Hb(23,"div",2),r.Hb(24,"div",3),r.Hb(25,"h3",4),r.ac(26," New C++ standard "),r.Gb(),r.ac(27," Always keeping up-to-date, asano-gcc supports latest C++ standard. Code is more robuts with modern C++. "),r.Gb(),r.Gb(),r.Hb(28,"div",2),r.Hb(29,"div",3),r.Hb(30,"h3",4),r.ac(31," Easy used by other IDEs "),r.Gb(),r.ac(32," asano-gcc can be worked with many IDE/Editors, like VSCode, QtCreator, DevC++ ... "),r.Gb(),r.Gb(),r.Gb(),r.Gb())},styles:[""]}),e})();var s=a("tyNb");let b=(()=>{class e{}return e.\u0275mod=r.Cb({type:e}),e.\u0275inj=r.Bb({factory:function(t){return new(t||e)},imports:[[o.b,s.d.forChild([{path:"",component:n}])]]}),e})()}}]);