(self.webpackChunkasano_build=self.webpackChunkasano_build||[]).push([[699],{3699:(e,n,t)=>{"use strict";t.r(n),t.d(n,{OverviewPageModule:()=>r});var o=t(1116),a=t(8619);let i=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["app-overview-page"]],decls:12,vars:0,consts:[[1,"my-2","d-flex","justify-content-center"],[1,"h3","text-center"],[1,"py-2","d-flex","justify-content-center"],["src","/assets/overview.png","sizes","",1,"img-thumbnail","w-75"]],template:function(e,n){1&e&&(a.TgZ(0,"div",0),a.TgZ(1,"div",1),a._uU(2," Introducing asano-gcc "),a.qZA(),a.qZA(),a.TgZ(3,"div"),a._uU(4," asano-gcc is based on GCC (GNU Compiler Collection) and MinGW-w64. Aiming for portable and high-performance code generation, asano-gcc only focuses on C/C++ compiler, no Fortran or other languages. asano-gcc is a pure 64bit toolset of compiler, linker and debugger for modern Windows (7+). All components run on Windows natively (No need MSYS installed). "),a.TgZ(5,"div",2),a._UZ(6,"img",3),a.qZA(),a.qZA(),a.TgZ(7,"div",0),a.TgZ(8,"div",1),a._uU(9," Ready for your next C++ project "),a.qZA(),a.qZA(),a.TgZ(10,"div"),a._uU(11," asano-gcc targets on generating light and fast binaries. Generated binaries are smaller than other MinGW-w64 GCC compilers. Without extra DLLs dependency, deployment is as simple as file copy. Most popular C++ projects (Qt, CMake, Git, JavaScript V8, FFmpeg...) which can be built using MinGW-w64 should be built smoothly using asano-gcc.\n"),a.qZA())},styles:[".w-75[_ngcontent-%COMP%]{max-width:400px}"]}),e})();var s=t(3319);let r=(()=>{class e{}return e.\u0275fac=function(n){return new(n||e)},e.\u0275mod=a.oAB({type:e}),e.\u0275inj=a.cJS({imports:[[o.ez,s.Bz.forChild([{path:"",component:i}])]]}),e})()}}]);