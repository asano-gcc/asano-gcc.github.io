(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{yays:function(e,n,o){"use strict";o.r(n),o.d(n,"OverviewPageModule",function(){return s});var t=o("ofXK"),i=o("fXoL");let a=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=i.yb({type:e,selectors:[["app-overview-page"]],decls:12,vars:0,consts:[[1,"my-2","d-flex","justify-content-center"],[1,"h3","text-center"],[1,"py-2","d-flex","justify-content-center"],["src","/assets/overview.png","sizes","",1,"img-thumbnail","w-75"]],template:function(e,n){1&e&&(i.Hb(0,"div",0),i.Hb(1,"div",1),i.bc(2," Introducing asano-gcc "),i.Gb(),i.Gb(),i.Hb(3,"div"),i.bc(4," asano-gcc is based on GCC (GNU Compiler Collection) and MinGW-w64. Aiming for portable and high-proformance code generation, asano-gcc only focuses on C/C++ compiler, no Fortran or other languages. asano-gcc is a pure 64bit toolset of compiler, linker and debugger for modern Windows (7+). All components run on Windows natively (No need MSYS installed). "),i.Hb(5,"div",2),i.Fb(6,"img",3),i.Gb(),i.Gb(),i.Hb(7,"div",0),i.Hb(8,"div",1),i.bc(9," Ready for your next C++ project "),i.Gb(),i.Gb(),i.Hb(10,"div"),i.bc(11," asano-gcc targets on generating light and fast binaries. Generated binaries are smaller than other MinGW-w64 GCC compilers. Without extra DLLs dependancy, deployment is as simple as file copy. Most popular C++ projects (Qt, CMake, Git, JavaScript V8, FFmpeg...) which can be built using MinGW-w64 should be built smoothly using asano-gcc.\n"),i.Gb())},styles:[".w-75[_ngcontent-%COMP%]{max-width:400px}"]}),e})();var r=o("tyNb");let s=(()=>{class e{}return e.\u0275mod=i.Cb({type:e}),e.\u0275inj=i.Bb({factory:function(n){return new(n||e)},imports:[[t.b,r.d.forChild([{path:"",component:a}])]]}),e})()}}]);